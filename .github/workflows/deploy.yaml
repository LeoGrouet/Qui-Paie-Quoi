name: "deploy"

on:
  push:
    branches: 
    - feat/deploy

concurrency:
  group: "${{ github.workflow }} @ ${{ github.ref }}"
  cancel-in-progress: true

env:
  COMPOSE_PROJECT_FILE: docker-compose.prod.yaml
  VERSION_NAME: ${{ github.sha }}
  POSTGRES_USER: ${{ secrets.DATABASE_USER }}
  POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  APP_SECRET: ${{ secrets.APP_SECRET }}

jobs:
  deploy:
    runs-on: ["ubuntu-latest"]

    steps:
      - uses: actions/checkout@v4

      - name: Initialize ssh agent
        run: |
          which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)
          eval "$(ssh-agent -s)"

          mkdir -p ~/.ssh

          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-add ~/.ssh/id_rsa

          chmod 700 ~/.ssh

          ssh-keyscan "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect to Docker
        run : docker login -u ${{ vars.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Images
        run : touch App/.env; VERSION_NAME=$VERSION_NAME docker compose build

      - name: Push 
        run : VERSION_NAME=$VERSION_NAME docker compose push

      - name: Copy compose file
        run : scp docker-compose.prod.yaml ${{ vars.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:qui-paie-quoi/docker-compose.yaml

      - name: Pull image on server
        run : ssh ${{ vars.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "cd qui-paie-quoi; VERSION_NAME=$VERSION_NAME docker compose pull"

      - name: Start containers
        run : ssh ${{ vars.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "cd qui-paie-quoi; VERSION_NAME=$VERSION_NAME docker compose up --detach --no-build"